{"version":3,"sources":["src/index.ts"],"names":[],"mappings":"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","file":"src.01736d46.js","sourceRoot":"..","sourcesContent":["const spaceshipDiv = document.getElementById(\"spaceship\") as HTMLDivElement;\r\nconst app = document.getElementById(\"app\") as HTMLDivElement;\r\n\r\nclass AsteroidFlyweight {\r\n  public img: string = \"\";\r\n  public width: number = 0;\r\n  public height: number = 0;\r\n\r\n  constructor(img: string, width: number, height: number) {\r\n    this.img = img;\r\n    this.width = width;\r\n    this.height = height;\r\n  }\r\n}\r\n\r\nclass ConcreteAsteroid {\r\n  public xPosition: number = 0;\r\n  public yPosition: number = 0;\r\n  public speed: number = 0;\r\n  public flyweight: AsteroidFlyweight;\r\n  public id: number = 0;\r\n\r\n  constructor(\r\n    xPosition: number,\r\n    speed: number,\r\n    flyweight: AsteroidFlyweight,\r\n    id: number\r\n  ) {\r\n    this.flyweight = flyweight;\r\n    this.speed = speed;\r\n    this.xPosition = xPosition;\r\n    this.id = id;\r\n  }\r\n\r\n  public getAsteroidDiv() {\r\n    return document.querySelector(`[data-id=\"${this.id}\"]`) as HTMLDivElement;\r\n  }\r\n\r\n  public updateYPosition(y: number) {\r\n    if (y > app.clientHeight - this.flyweight.height) return this.id;\r\n\r\n    const asteroidDiv = this.getAsteroidDiv();\r\n\r\n    asteroidDiv.style.top = `${y}px`;\r\n    this.yPosition = y;\r\n  }\r\n}\r\n\r\ninterface Flyweights {\r\n  [key: string]: AsteroidFlyweight;\r\n}\r\n\r\nclass FlyweightFactory {\r\n  private flyweights: Flyweights = {};\r\n\r\n  public getFlyweight(type: AsteroidType): AsteroidFlyweight {\r\n    if (!(type in this.flyweights)) {\r\n      // FlyweightFactory: Can't find a flyweight, creating new one.\r\n      console.log(\r\n        \"FlyweightFactory: Can't find a flyweight, creating new one.\"\r\n      );\r\n      switch (type) {\r\n        case \"burning\":\r\n          this.flyweights[type] = new AsteroidFlyweight(\"burning\", 35, 50);\r\n          break;\r\n        case \"burningSmall\":\r\n          this.flyweights[type] = new AsteroidFlyweight(\"burningSmall\", 35, 50);\r\n          break;\r\n\r\n        case \"black\":\r\n          this.flyweights[type] = new AsteroidFlyweight(\"black\", 35, 35);\r\n          break;\r\n      }\r\n\r\n      // this.flyweights[key] = new AsteroidFlyweight(sharedState);\r\n    } else {\r\n      // FlyweightFactory: Reusing existing flyweight.\r\n      console.log(\"FlyweightFactory: Reusing existing flyweight.\");\r\n    }\r\n\r\n    return this.flyweights[type];\r\n  }\r\n\r\n  public listFlyweights(): void {\r\n    const count = Object.keys(this.flyweights).length;\r\n    console.log(`\\nFlyweightFactory: I have ${count} flyweights:`);\r\n    for (const key in this.flyweights) {\r\n      console.log(key);\r\n    }\r\n  }\r\n}\r\n\r\nconst getRandomNumber = (max: number) => Math.floor(Math.random() * max + 1);\r\n\r\nclass AsteroidManagerSingleton {\r\n  private static instance: AsteroidManagerSingleton;\r\n  private setIntervalIndex: number | null = null;\r\n  private asteroidsAlreadyFallenIds: number[] = [];\r\n\r\n  public static getInstance(): AsteroidManagerSingleton {\r\n    if (!AsteroidManagerSingleton.instance) {\r\n      AsteroidManagerSingleton.instance = new AsteroidManagerSingleton();\r\n    }\r\n    return AsteroidManagerSingleton.instance;\r\n  }\r\n\r\n  private asteroids: ConcreteAsteroid[] = [];\r\n\r\n  public addAsteroid(asteroid: ConcreteAsteroid) {\r\n    this.asteroids.push(asteroid);\r\n  }\r\n\r\n  private addFallenAsteroid(id: number) {\r\n    if (this.asteroidsAlreadyFallenIds.indexOf(id) > -1) return;\r\n    this.asteroidsAlreadyFallenIds.push(id);\r\n  }\r\n\r\n  private detectColission(concreteAsteroid: ConcreteAsteroid) {\r\n    const spaceshipHeight = spaceshipDiv.clientHeight;\r\n    const spaceshipWidth = spaceshipDiv.clientWidth;\r\n\r\n    const spaceshipYPositionStart = spaceshipDiv.offsetTop;\r\n    const spaceshipXPositionStart = spaceshipDiv.offsetLeft;\r\n\r\n    const spaceship = {\r\n      x: spaceshipXPositionStart,\r\n      y: spaceshipYPositionStart,\r\n      h: spaceshipHeight,\r\n      w: spaceshipWidth,\r\n    };\r\n\r\n    const asteroidDiv = concreteAsteroid.getAsteroidDiv();\r\n\r\n    const asteroidHeight = asteroidDiv.clientHeight;\r\n    const asteroidWidth = asteroidDiv.clientWidth;\r\n\r\n    const asteroidYPositionStart = asteroidDiv.offsetTop;\r\n    const asteroidXPositionStart = asteroidDiv.offsetLeft;\r\n\r\n    const asteroid = {\r\n      x: asteroidXPositionStart,\r\n      y: asteroidYPositionStart,\r\n      h: asteroidHeight,\r\n      w: asteroidWidth,\r\n    };\r\n\r\n    if (\r\n      spaceship.x < asteroid.x + asteroid.w &&\r\n      spaceship.x + spaceship.w > asteroid.x &&\r\n      spaceship.y < asteroid.y + asteroid.h &&\r\n      spaceship.h + spaceship.y > asteroid.y\r\n    ) {\r\n      this.stopAsteroids();\r\n      const modalLost = document.querySelector(\r\n        \".modal--lost\"\r\n      ) as HTMLDivElement;\r\n      modalLost.classList.add(\"modal--open\");\r\n    }\r\n  }\r\n\r\n  public drawAsteroids() {\r\n    this.asteroids.forEach((asteroid) => {\r\n      const asteroidElement = document.createElement(\"div\");\r\n      asteroidElement.style.position = \"absolute\";\r\n      asteroidElement.style.width = `${asteroid.flyweight?.width}px`;\r\n      asteroidElement.style.height = `${asteroid.flyweight?.height}px`;\r\n      asteroidElement.classList.add(`asteroid`);\r\n      asteroidElement.classList.add(`${asteroid.flyweight?.img}`);\r\n      asteroidElement.style.backgroundSize = \"cover\";\r\n      asteroidElement.style.backgroundPosition = \"center\";\r\n      asteroidElement.style.left = `${asteroid.xPosition}px`;\r\n      asteroidElement.dataset.id = `${asteroid.id}`;\r\n\r\n      app.appendChild(asteroidElement);\r\n    });\r\n  }\r\n\r\n  private stopAsteroids() {\r\n    if (this.setIntervalIndex) {\r\n      clearInterval(this.setIntervalIndex);\r\n      this.setIntervalIndex = null;\r\n    }\r\n  }\r\n\r\n  public moveAsteroids() {\r\n    this.setIntervalIndex = setInterval(() => {\r\n      this.asteroids.forEach((asteroid) => {\r\n        this.detectColission(asteroid);\r\n        const id = asteroid.updateYPosition(\r\n          asteroid.yPosition + asteroid.speed\r\n        );\r\n\r\n        if (typeof id !== \"undefined\") {\r\n          this.addFallenAsteroid(id);\r\n        }\r\n\r\n        if (\r\n          this.asteroidsAlreadyFallenIds.length === this.asteroids.length &&\r\n          this.setIntervalIndex\r\n        ) {\r\n          this.stopAsteroids();\r\n          const modalWin = document.querySelector(\r\n            \".modal--win\"\r\n          ) as HTMLDivElement;\r\n          modalWin.classList.add(\"modal--open\");\r\n        }\r\n      });\r\n    }, 200);\r\n  }\r\n}\r\n\r\nconst AsteroidManager = AsteroidManagerSingleton.getInstance();\r\n\r\nconst flyweightFactory = new FlyweightFactory();\r\nflyweightFactory.listFlyweights();\r\n\r\ntype AsteroidType = \"burning\" | \"burningSmall\" | \"black\";\r\n\r\nconst asteroidsAmount = 20;\r\n\r\nfor (let i = 0; i < asteroidsAmount; i++) {\r\n  const flyweight = flyweightFactory.getFlyweight(\r\n    i % 2 === 1 ? \"burning\" : i % 3 === 1 ? \"burningSmall\" : \"black\"\r\n  );\r\n\r\n  const concreteAsteroid = new ConcreteAsteroid(\r\n    getRandomNumber(app.clientWidth - 70),\r\n    getRandomNumber(20) + 5,\r\n    flyweight,\r\n    i\r\n  );\r\n  AsteroidManager.addAsteroid(concreteAsteroid);\r\n}\r\n\r\nAsteroidManager.drawAsteroids();\r\nAsteroidManager.moveAsteroids();\r\nflyweightFactory.listFlyweights();\r\n\r\nclass Spaceship {\r\n  public state!: State;\r\n  public stepAmmount = 50;\r\n  public Y = app.clientHeight / 2;\r\n  public X = app.clientWidth / 2;\r\n\r\n  constructor(state: State) {\r\n    this.transitionTo(state);\r\n    spaceshipDiv.style.top = `${app.clientHeight / 2}px`;\r\n    spaceshipDiv.style.left = `${app.clientWidth / 2}px`;\r\n  }\r\n\r\n  public transitionTo(state: State): void {\r\n    this.state = state;\r\n    this.state.setContext(this);\r\n  }\r\n\r\n  public moveForward(): void {\r\n    this.state.moveForward();\r\n  }\r\n\r\n  public moveBackward(): void {\r\n    this.state.moveBackward();\r\n  }\r\n\r\n  public moveLeft(): void {\r\n    this.state.moveLeft();\r\n  }\r\n\r\n  public moveRight(): void {\r\n    this.state.moveRight();\r\n  }\r\n\r\n  public reachedTopBorder() {\r\n    return this.Y - this.stepAmmount < 0 + spaceshipDiv.clientHeight;\r\n  }\r\n\r\n  public reachedBottomBorder() {\r\n    return (\r\n      this.Y + this.stepAmmount > app.clientHeight - spaceshipDiv.clientHeight\r\n    );\r\n  }\r\n\r\n  public reachedLeftBorder() {\r\n    return this.X - this.stepAmmount < 0 + spaceshipDiv.clientWidth;\r\n  }\r\n\r\n  public reachedRightBorder() {\r\n    return (\r\n      this.X + this.stepAmmount > app.clientWidth - spaceshipDiv.clientWidth\r\n    );\r\n  }\r\n\r\n  public moveSpaceshipDiv(\r\n    direction: \"forward\" | \"backward\" | \"left\" | \"right\"\r\n  ) {\r\n    switch (direction) {\r\n      case \"forward\":\r\n        console.log({\r\n          this_Y: this.Y,\r\n          this_stepAmount: this.stepAmmount,\r\n          total: this.Y - this.stepAmmount,\r\n        });\r\n        spaceshipDiv.style.top = `${this.Y - this.stepAmmount}px`;\r\n        this.Y -= this.stepAmmount;\r\n        break;\r\n\r\n      case \"backward\":\r\n        console.log({\r\n          this_Y: this.Y,\r\n          this_stepAmount: this.stepAmmount,\r\n          total: this.Y + this.stepAmmount,\r\n        });\r\n        spaceshipDiv.style.top = `${this.Y + this.stepAmmount}px`;\r\n        this.Y += this.stepAmmount;\r\n        break;\r\n\r\n      case \"left\":\r\n        console.log({\r\n          this_Y: this.Y,\r\n          this_stepAmount: this.stepAmmount,\r\n          total: this.X - this.stepAmmount,\r\n        });\r\n        spaceshipDiv.style.left = `${this.X - this.stepAmmount}px`;\r\n        this.X -= this.stepAmmount;\r\n        break;\r\n\r\n      case \"right\":\r\n        console.log({\r\n          this_X: this.X,\r\n          this_stepAmount: this.stepAmmount,\r\n          total: this.X + this.stepAmmount,\r\n        });\r\n        spaceshipDiv.style.left = `${this.X + this.stepAmmount}px`;\r\n        this.X += this.stepAmmount;\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nabstract class State {\r\n  // @ts-ignore\r\n  protected context: Spaceship;\r\n\r\n  public setContext(context: Spaceship) {\r\n    this.context = context;\r\n  }\r\n\r\n  public abstract moveForward(): void;\r\n\r\n  public abstract moveBackward(): void;\r\n\r\n  public abstract moveLeft(): void;\r\n\r\n  public abstract moveRight(): void;\r\n}\r\n\r\nclass ForwardState extends State {\r\n  public moveForward(): void {}\r\n\r\n  public moveBackward(): void {\r\n    if (this.context.reachedBottomBorder()) {\r\n      this.context?.transitionTo(new BackwardState());\r\n    } else {\r\n      this.context?.transitionTo(new MovingState());\r\n      this.context.moveSpaceshipDiv(\"backward\");\r\n    }\r\n  }\r\n\r\n  public moveLeft(): void {\r\n    if (this.context.reachedLeftBorder()) {\r\n      this.context?.transitionTo(new LeftState());\r\n    } else {\r\n      this.context?.transitionTo(new MovingState());\r\n      this.context.moveSpaceshipDiv(\"left\");\r\n    }\r\n  }\r\n\r\n  public moveRight(): void {\r\n    if (this.context.reachedRightBorder()) {\r\n      this.context?.transitionTo(new RightState());\r\n    } else {\r\n      this.context?.transitionTo(new MovingState());\r\n      this.context.moveSpaceshipDiv(\"right\");\r\n    }\r\n  }\r\n}\r\nclass BackwardState extends State {\r\n  public moveForward(): void {\r\n    if (this.context.reachedTopBorder()) {\r\n      this.context?.transitionTo(new ForwardState());\r\n    } else {\r\n      this.context?.transitionTo(new MovingState());\r\n      this.context.moveSpaceshipDiv(\"forward\");\r\n    }\r\n  }\r\n\r\n  public moveBackward(): void {}\r\n\r\n  public moveLeft(): void {\r\n    if (this.context.reachedLeftBorder()) {\r\n      this.context?.transitionTo(new LeftState());\r\n    } else {\r\n      this.context?.transitionTo(new MovingState());\r\n      this.context.moveSpaceshipDiv(\"left\");\r\n    }\r\n  }\r\n\r\n  public moveRight(): void {\r\n    if (this.context.reachedRightBorder()) {\r\n      this.context?.transitionTo(new RightState());\r\n    } else {\r\n      this.context?.transitionTo(new MovingState());\r\n      this.context.moveSpaceshipDiv(\"right\");\r\n    }\r\n  }\r\n}\r\n\r\nclass LeftState extends State {\r\n  public moveForward(): void {\r\n    if (this.context.reachedTopBorder()) {\r\n      this.context?.transitionTo(new ForwardState());\r\n    } else {\r\n      this.context?.transitionTo(new MovingState());\r\n      this.context.moveSpaceshipDiv(\"forward\");\r\n    }\r\n  }\r\n\r\n  public moveBackward(): void {\r\n    if (this.context.reachedBottomBorder()) {\r\n      this.context?.transitionTo(new BackwardState());\r\n    } else {\r\n      this.context?.transitionTo(new MovingState());\r\n      this.context.moveSpaceshipDiv(\"backward\");\r\n    }\r\n  }\r\n\r\n  public moveLeft(): void {}\r\n\r\n  public moveRight(): void {\r\n    if (this.context.reachedRightBorder()) {\r\n      this.context?.transitionTo(new RightState());\r\n    } else {\r\n      this.context?.transitionTo(new MovingState());\r\n      this.context.moveSpaceshipDiv(\"right\");\r\n    }\r\n  }\r\n}\r\n\r\nclass RightState extends State {\r\n  public moveForward(): void {\r\n    if (this.context.reachedTopBorder()) {\r\n      this.context?.transitionTo(new ForwardState());\r\n    } else {\r\n      this.context?.transitionTo(new MovingState());\r\n      this.context.moveSpaceshipDiv(\"forward\");\r\n    }\r\n  }\r\n\r\n  public moveBackward(): void {\r\n    if (this.context.reachedBottomBorder()) {\r\n      this.context?.transitionTo(new BackwardState());\r\n    } else {\r\n      this.context?.transitionTo(new MovingState());\r\n      this.context.moveSpaceshipDiv(\"backward\");\r\n    }\r\n  }\r\n\r\n  public moveLeft(): void {\r\n    if (this.context.reachedLeftBorder()) {\r\n      this.context?.transitionTo(new LeftState());\r\n    } else {\r\n      this.context?.transitionTo(new MovingState());\r\n      this.context.moveSpaceshipDiv(\"left\");\r\n    }\r\n  }\r\n\r\n  public moveRight(): void {}\r\n}\r\n\r\nclass MovingState extends State {\r\n  public moveForward(): void {\r\n    if (this.context.reachedTopBorder()) {\r\n      this.context?.transitionTo(new ForwardState());\r\n    } else {\r\n      this.context?.transitionTo(new MovingState());\r\n      this.context.moveSpaceshipDiv(\"forward\");\r\n    }\r\n  }\r\n\r\n  public moveBackward(): void {\r\n    console.log({ movingBackward: \"HERE\" });\r\n    if (this.context.reachedBottomBorder()) {\r\n      this.context?.transitionTo(new BackwardState());\r\n    } else {\r\n      this.context?.transitionTo(new MovingState());\r\n      this.context.moveSpaceshipDiv(\"backward\");\r\n    }\r\n  }\r\n\r\n  public moveLeft(): void {\r\n    if (this.context.reachedLeftBorder()) {\r\n      this.context?.transitionTo(new LeftState());\r\n    } else {\r\n      this.context?.transitionTo(new MovingState());\r\n      this.context.moveSpaceshipDiv(\"left\");\r\n    }\r\n  }\r\n\r\n  public moveRight(): void {\r\n    if (this.context.reachedRightBorder()) {\r\n      this.context?.transitionTo(new RightState());\r\n    } else {\r\n      this.context?.transitionTo(new MovingState());\r\n      this.context.moveSpaceshipDiv(\"right\");\r\n    }\r\n  }\r\n}\r\n\r\nconst spaceship = new Spaceship(new MovingState());\r\n\r\nwindow.addEventListener(\"keydown\", (e) => {\r\n  switch (e.keyCode) {\r\n    // W\r\n    case 87:\r\n      spaceship.moveForward();\r\n      break;\r\n\r\n    // S\r\n    case 83:\r\n      spaceship.moveBackward();\r\n      break;\r\n\r\n    // A\r\n    case 65:\r\n      spaceship.moveLeft();\r\n      break;\r\n\r\n    // D\r\n    case 68:\r\n      spaceship.moveRight();\r\n      break;\r\n\r\n    default:\r\n      break;\r\n  }\r\n});\r\n"]}